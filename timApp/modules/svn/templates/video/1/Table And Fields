Table And Fields
Plugins for one task
- {"what": "TASK", "text": "Arvioitavan tehtävän nimi", "default": ""}
\

#- {defaultplugin="textfield" .fieldCell}
%% 'TASK_Riitauta=Riitauta TASK: Kirjoita tähän, jos et tykkää arvioista' | gfields('cols: 25') -%%
\
#- {area="TASK_demo" visible="%% False | isview%%" nocache="true"}
Tehtävä: TASK
#- {area="TASK_fields" collapse="true"}
Arviointitilanne

#- {defaultplugin="numericfield" readonly="view" .fieldCell}
%% 'TASK_Pisteet=Pisteet;TASK_Ope=Ope;TASK_Vp=Vp;TASK_VpOpe=VpOpe' | gfields('cols: 5') -%%
\
#- {defaultplugin="textfield" readonly="view" .fieldCell}
Tehtävän arvioineet:\
{%for i in range(0, arvosteltavia)%}
{#TASK_Arvioija_%%i+1%% stem: Arvioija %%i+1%%, cols: 10 #}
{#TASK_P_%%i+1%% stem: P, cols: 2 #}
{% endfor -%}
\
#- {defaultplugin="textfield" readonly="view" .fieldCell}
%% 'TASK_Riita=Riita;TASK_vaihto=Vaihto' | gfields('cols: 5') -%%
\
#- {area_end="TASK_fields"}
#- {area_end="TASK_demo"}
\
``` {#TASK_demotable plugin="tableForm" visible="%% False | isview%%" nocache="true"}
groups:
 - %%group%%
fields:
 - TASK_Vp=Vp
 - TASK_VpOpe=VpOpe
 - TASK_Pisteet=Pisteet
 - TASK_Ope=Ope
{% for i in range(1,arvosteltavia+1) %}
 - TASK_Arvioija_%%i%%=Arvioija%%i%%
 - TASK_P_%%i%%=P%%i%%
{% endfor %}
 - TASK_Riita=Riita
 - TASK_Riitauta=Riitauta
header: Demotaulukko
minWidth: 3em
singleLine: true
autosave: true
open: false
cbColumn: true
nrColumn: true
filterRow: true
hideButtonText: Piilota taulukko
emailUsersButtonText: Lähetä ruksituille sähköpostia
emailUsersButtonText: "Lähetä sähköpostia"
```
\
``` {#TASK_runnerVari plugin="jsrunner"}
groups:
 - %%group%%
buttonText: Päivitä tilanne
fields:
 - TASK_Ope=Ope
 - TASK_Pisteet=Pisteet
 - TASK_Vp=Vp
 - TASK_VpOpe=VpOpe
{% for i in range(1,arvosteltavia+1) %}
 - TASK_Arvioija_%%i%%
 - TASK_P_%%i%%=P%%i%%
{% endfor %}
 - TASK_Riitauta=Riitauta
updateFields:
 - TASK_Ope
 - TASK_Pisteet
 - TASK_Vp
 - TASK_VpOpe
{% for i in range(1,arvosteltavia+1) %}
 - TASK_Arvioija_%%i%%
 - TASK_P_%%i%%
{% endfor %}
 - TASK_Riitauta
preprogram: |!!
//
    const parsed = JSON.parse(this.g);
    gtools.users = {};
    for (a of parsed.data) {
       gtools.users[a.user.id] = a.user.name;
    }
!!
program: |!!

    let hyvitys = 1; // Arvioinnista saatu hyvityspiste
    let value = 6; // Suurin sallittu ero pisteiden välillä

    let arviotLkm = tools.getReviewCount("TASK"); // Opiskelijan tekemien arvioiden lkm
    let vp = arviotLkm * hyvitys
    tools.setDouble("Vp", vp);

    let pisteet = tools.getTaskPoints("TASK"); // Keskiarvo vertaisarviointien pistemääristä
    let ope = tools.getDouble("Ope", -100); //Opettajan tekemä korjaus pisteytykseen
    if (ope != -100) {
        tools.setDouble("Pisteet", ope);
    }
    else {
        tools.setString("Pisteet", pisteet);
    }

    let VpOpe = tools.getDouble("VpOpe", -100); //Opettajan tekemä korjaus pisteytykseen
    if (VpOpe != -100) {
        tools.setDouble("Vp", VpOpe);
    }
    else {
        tools.setString("Vp", vp);
    }

    pointsArray = [];
    arvioinnit = tools.getReviews("TASK", gtools.users);
    for (let i =1; i <= arvioinnit.length; i++) {
        tools.setString("TASK_Arvioija_${i}"+i, arvioinnit[i-1].name);
        points = arvioinnit[i-1].points;
        totalPoints = 0;
        for (let j=0; j<points.length; j++) {
            totalPoints += points[j];
        }
        avg = totalPoints / points.length;
        tools.setString("TASK_P_"+i, avg);

        pointsArray.push(avg);
        max = Math.max(...pointsArray);
        min = Math.min(...pointsArray);
        delta = max - min;
        if (delta >= value && pointsArray.length > 1 ) {
            tools.setDouble("TASK_Riita", delta);
            tools.setString("TASK_Riita.styles", '{"backgroundColor": "red"}');
        }
    }
!!
```
\
``` {#TASK_changeReviewersRunner plugin="jsrunner"}
button: Aseta uudet arvioijat
groups:
 - %%group%%
fields:
{% for i in range(1,arvosteltavia+1) %}
 - TASK_Arvioija_%%i%%
{% endfor %}
updateFields:
{% for i in range(1,arvosteltavia+1) %}
 - TASK_Arvioija_%%i%%
{% endfor %}
paramFields:
{% for i in range(1,arvosteltavia+1) %}
 - TASK_Arvioija_%%i%%
{% endfor %}
peerReviewField: TASK_vaihto
preprogram: |!!
    const parsed = JSON.parse(this.g);
    gtools.users = {};
    for (a of parsed.data) {
       gtools.users[a.user.id] = a.user.name
    }
!!
program: |!!
    tools.changePeerReviewer(gtools.users)
!!
```
