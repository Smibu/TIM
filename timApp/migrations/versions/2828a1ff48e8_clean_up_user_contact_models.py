"""Clean up user contact models

Revision ID: 2828a1ff48e8
Revises: 8770c4966dc5
Create Date: 2021-09-01 07:21:46.353595

"""

# revision identifiers, used by Alembic.
revision = '2828a1ff48e8'
down_revision = '8770c4966dc5'

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

channel_enum = sa.Enum('TIM_MESSAGE', 'EMAIL_LIST', name='channel')
verification_type = sa.Enum('LIST_JOIN', 'CONTACT_OWNERSHIP', name='verificationtype')


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usercontact',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('contact', sa.Text(), nullable=False),
                    sa.Column('verified', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['useraccount.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.add_column('usercontact', sa.Column('channel', channel_enum, nullable=False))
    op.create_table('verification',
                    sa.Column('contact_id', sa.Integer(), nullable=True),
                    sa.Column('requested_at', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('token', sa.Text(), nullable=False),
                    sa.Column('reacted_at', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['contact_id'], ['usercontact.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['useraccount.id'], ),
                    )
    op.add_column('verification', sa.Column('type', verification_type, nullable=False))
    op.create_primary_key('pk_verification', 'verification', ['type', 'token'])
    op.drop_table('verifications')
    op.drop_table('user_emails')

    with op.get_context().autocommit_block():
        # The enum 'channel' is already in use and has a new value since it was first used, so we need to manually
        # update its value.ALTER TYPE cannot be used in a transaction context in postgresql v. < 12, so we need to wrap
        # this in an autocommit block.
        op.execute("""ALTER TYPE channel ADD VALUE IF NOT EXISTS 'EMAIL'""")
        # verificationtype enum had its value changed between migrations. It is safer to just add a new value,
        # and leave the existing one in, to ensure that downgrades can be done safely.
        op.execute("""ALTER TYPE verificationtype ADD VALUE IF NOT EXISTS 'CONTACT_OWNERSHIP'""")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_emails',
                    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('additional_email', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.Column('is_primary_email', sa.BOOLEAN(), autoincrement=False, nullable=True),
                    sa.Column('address_verified', postgresql.TIMESTAMP(timezone=True), autoincrement=False,
                              nullable=True),
                    sa.ForeignKeyConstraint(['id'], ['useraccount.id'], name='user_emails_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='user_emails_pkey'),
                    sa.UniqueConstraint('additional_email', name='user_emails_additional_email_key')
                    )
    op.create_table('verifications',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('verification_pending', postgresql.TIMESTAMP(timezone=True), autoincrement=False,
                              nullable=True),
                    sa.Column('verified', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
                    sa.Column('verification_link', sa.TEXT(), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='verifications_pkey')
                    )
    op.add_column('verifications', sa.Column('verification_type', verification_type, nullable=False))
    op.drop_table('verification')
    op.drop_table('usercontact')
    # ### end Alembic commands ###
