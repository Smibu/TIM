version: "3"
services:
 tim:
  image: timimages/tim:${TIM_IMAGE_TAG}
  build: ./timApp
  depends_on:
   # - stack-api-server
   - postgresql
   - csplugin
   - pali
   - field
   - showfile
   - haskellplugins
   - imagex
   - uploader
   - dumbo
   - feedback
  volumes:
   - .:/service
   - ${LOG_DIR}:/service/tim_logs
   - ${FILES_ROOT}:/tim_files
   - /opt/jspm_cache:/root/.jspm
  working_dir: /service/timApp
  command: python3 launch.py --with-gunicorn
  environment:
   FLASK_APP: tim.py
   PYTHONPATH: /service:/service/timApp/modules/py:/usr/local/lib/python3.6/dist-packages
   COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
   TIM_SETTINGS: ${CONFIG_FILE}
   TIM_HOST: ${TIM_HOST}
  restart: unless-stopped
 timagent:
  image: timimages/timagent
  build:
   context: ./timApp
   dockerfile: DockerfileAgent
   args:
    TIM_IMAGE_TAG: ${TIM_IMAGE_TAG}
  command: sleep infinity
  restart: unless-stopped
 postgresql:
  image: postgres:9.5
  volumes:
   - data:/var/lib/postgresql/data
  command: postgres -c 'max_connections=200'
  restart: unless-stopped
 csplugin:
  image: timimages/cs3:rust
  build: ./timApp/modules/cs
  volumes:
   - ${FILES_ROOT}/blocks/uploads:/uploads:ro
   - ./timApp/modules/cs:/cs
   - /var/run/docker.sock:/var/run/docker.sock
   - ./timApp/modules/cs/generated:/csgenerated
   - ./timApp/modules/cs/static:/csstatic:ro
   - ./timApp/modules/py:/py:ro
   - /tmp/${COMPOSE_PROJECT_NAME}_uhome:/tmp
  working_dir: /cs
  command: ./startPlugins.sh
  environment:
   PYTHONUNBUFFERED: "1"
   TIM_ROOT: ${TIM_ROOT}
   COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
  user: root
  restart: unless-stopped
 haskellplugins:
  image: timimages/haskellplugins:latest
  build:
   context: ./timApp/modules/Haskell
   dockerfile: Dockerfile
  volumes:
   - ./timApp/modules/Haskell:/Haskell
  working_dir: /Haskell
  command: ./startAll.sh
  restart: unless-stopped
 showfile:
  image: timimages/svn:bionic
  build: ./timApp/modules/svn
  volumes:
   - ./timApp/modules/svn:/svn:ro
   - ./timApp/modules/py:/py:ro
  working_dir: /svn
  command: ./startAll.sh
  restart: unless-stopped
 imagex:
  image: timimages/cs3:rust
  volumes:
   - ./timApp/modules/imagex:/imagex:ro
   - ./timApp/modules/py:/py:ro
  working_dir: /imagex
  command: ./startAll.sh
  restart: unless-stopped
 pali:
  image: timimages/tim:${TIM_IMAGE_TAG}
  build: ./timApp/modules/pali
  volumes:
   - ./timApp/modules/pali:/pali:ro
   - ./timApp/modules/py:/py:ro
  working_dir: /pali
  environment:
    PYTHONPATH: /pali:/py:/usr/local/lib/python3.6/dist-packages
  command: ./startAll.sh
  restart: unless-stopped
 field:
  image: timimages/tim:${TIM_IMAGE_TAG}
  build: ./timApp/modules/textfield
  volumes:
   - ./timApp/modules/textfield:/textfield:ro
   - ./timApp/modules/py:/py:ro
  working_dir: /textfield
  environment:
   PYTHONPATH: /textfield:/py:/usr/local/lib/python3.6/dist-packages
  command: ./startAll.sh
  restart: unless-stopped
 jsrunner:
  image: timimages/tim:${TIM_IMAGE_TAG}
  #build: ./timApp/modules/multisave
  volumes:
   - ./timApp/modules/jsrunner:/timApp/modules/jsrunner:rw
   - ./timApp/static/scripts:/timApp/static/scripts:ro
  working_dir: /timApp/modules/jsrunner
  command: ./startAll.sh
  restart: unless-stopped
 drag:
  image: timimages/tim:${TIM_IMAGE_TAG}
  volumes:
   - ./timApp/modules/drag:/drag:ro
   - ./timApp/modules/py:/py:ro
  working_dir: /drag
  environment:
   PYTHONPATH: /drag:/py:/usr/local/lib/python3.6/dist-packages
  command: ./startAll.sh
  restart: unless-stopped
 feedback:
  image: timimages/tim:${TIM_IMAGE_TAG}
  volumes:
   - ./timApp/modules/feedback:/feedback:ro
   - ./timApp/modules/py:/py:ro
  working_dir: /feedback
  environment:
   PYTHONPATH: /feedback:/py:/usr/local/lib/python3.6/dist-packages
  command: ./startAll.sh
  restart: unless-stopped
 uploader:
  image: villet/uploaderplugin:13_10_16_15
  command: ${UPLOADER_COMMAND}
  restart: unless-stopped
 nginx:
  image: timimages/local_nginx:compose
  build:
   context: ./local_nginx
  depends_on:
   - tim
   - jsrunner
  volumes:
   - ./timApp/modules/cs/static:/csstatic:ro
   - ./timApp/modules/cs/generated:/csgenerated:ro
   - ./timApp/static:/static:ro
  restart: unless-stopped
 dumbo:
  image: timimages/dumbo:${TIM_IMAGE_TAG}
  build:
   context: ./Dumbo
   dockerfile: Dockerfile
   args:
    TIM_IMAGE_TAG: ${TIM_IMAGE_TAG}
  command: ./Dumbo --port 5000 --cacheDir /dumbocache --tmpDir /dumbotmp
  working_dir: /Dumbo
  volumes:
   - ./Dumbo/cache:/dumbocache
   - ./Dumbo/tmp:/dumbotmp
  logging:
   driver: none
  restart: unless-stopped
 redis:
  image: redis
  restart: unless-stopped
 celery:
  image: timimages/tim:${TIM_IMAGE_TAG}
  command: celery -A timApp.tim_celery.celery worker -B --concurrency 4
  volumes:
   - .:/service
   - ${LOG_DIR}:/service/tim_logs
   - ${FILES_ROOT}:/tim_files
  working_dir: /service/timApp
  depends_on:
   - postgresql
   - redis
  environment:
   FLASK_APP: tim.py
   PYTHONPATH: /service:/service/timApp/modules/py:/usr/local/lib/python3.6/dist-packages
   COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
   TIM_SETTINGS: ${CONFIG_FILE}
   TIM_HOST: ${TIM_HOST}
  restart: unless-stopped
 stack-api-server:
  build: ./stack
  image: timimages/stack
  security_opt:
   - seccomp:unconfined
  volumes:
   - ./stack/plots:/var/data/api/stack/plots:rw
   - ./stack/plots:/var/www/html/plots:rw
   - ./stack/api/config.php.docker:/var/www/html/config.php:rw
   - ./stack/entrypoint_install_and_run.sh:/var/www/html/entrypoint_install_and_run.sh
   # - ./stack/cas/castext/jsxgraphapi.block.php:/var/www/html/stack/cas/castext/jsxgraph.block.php
  restart: unless-stopped
  environment:
   BROWSER_URL: ${BROWSER_URL}
volumes:
 data:
